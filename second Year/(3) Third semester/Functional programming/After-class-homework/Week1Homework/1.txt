
1- Closure е способноста на функция, която е извикана от "родителска" функция
да запазва информация (например променливи) от "родителя"

2- Една функция може да бъде върната и да помни информация от "родителската" функция,
която е я върнала. Така тя може да се използва и на други места със запомнени параметри.

3- Функция от по-висок ред може да приема други функции като параметри.
Тези функции имат за цел да модифицират информацията по някакъв начин.

4- map функция, която приема filter или order функция, за да променя данните.

5- "Чистите" функци избягват да модифицират или приемат данни извън тяхното поле. 
Целта е да се предотвартят странични ефекти

6- Идея, че нищо не се променя, като константи стойности. 

7- Това е техника, където една функция (нека се казва 1) връща нова функция (нека се казва 2), в която са използвнаи аргументите от "финкция 1".
Пирмер:
Може да се направят гъвкави функци. която да върни различна функция в зависимост от параметъра. 
Използва Closure функционалноста, за запазване на параметри от "функция 1".

8- Всичко е декларативно. Избягване на допълнителни обяснения, като типове, memory allocation и др.
Програмиста казва какво да става, компилатора оправя всичко друго.

Всичко е детерминистично. Няма случайни събития, четене или променяне на глобални стойности. Всичко е затворено. 

Нищо не се променя. Всичко е константно и ако трябва да се промени се прави копие, което е промененото нещо.
